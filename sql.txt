SELECT SocName FROM SOCIETY
JOIN ENROLLMENT ON SOCIETY.SocID = ENROLLMENT.SID
GROUP BY SocName
HAVING COUNT(ENROLLMENT.RollNo) > 5;

-- 
SELECT StudentName FROM STUDENT
JOIN ENROLLMENT ON STUDENT.RollNo = ENROLLMENT.RollNo
JOIN SOCIETY ON ENROLLMENT.SID = SOCIETY.SocID
WHERE SocName = 'NSS'
ORDER BY DOB DESC
LIMIT 1;

-- 
SELECT SocName FROM SOCIETY
JOIN ENROLLMENT ON SOCIETY.SocID = ENROLLMENT.SID
GROUP BY SocName
ORDER BY COUNT(ENROLLMENT.RollNo) DESC
LIMIT 1;

-- 
SELECT SocName FROM SOCIETY
JOIN ENROLLMENT ON SOCIETY.SocID = ENROLLMENT.SID
GROUP BY SocName
ORDER BY COUNT(ENROLLMENT.RollNo)
LIMIT 2;

-- 
SELECT StudentName FROM STUDENT
WHERE RollNo NOT IN (SELECT RollNo FROM ENROLLMENT);

-- 

SELECT StudentName FROM STUDENT
JOIN ENROLLMENT ON STUDENT.RollNo = ENROLLMENT.RollNo
GROUP BY StudentName
HAVING COUNT(ENROLLMENT.SID) >= 2;

-- 
SELECT SocName FROM SOCIETY
JOIN ENROLLMENT ON SOCIETY.SocID = ENROLLMENT.SID
GROUP BY SocName
ORDER BY COUNT(ENROLLMENT.RollNo) DESC
LIMIT 1;

-- 
SELECT DISTINCT STUDENT.StudentName, SOCIETY.SocName FROM STUDENT
JOIN ENROLLMENT ON STUDENT.RollNo = ENROLLMENT.RollNo
JOIN SOCIETY ON ENROLLMENT.SID = SOCIETY.SocID;

-- 

SELECT StudentName FROM STUDENT
JOIN ENROLLMENT ON STUDENT.RollNo = ENROLLMENT.RollNo
JOIN SOCIETY ON ENROLLMENT.SID = SOCIETY.SocID
WHERE SocName IN ('Debating', 'Dancing', 'Sashakt');

-- 

SELECT SocName FROM SOCIETY
WHERE MentorName LIKE '%Gupta%';
-- 

SELECT SocName FROM SOCIETY
JOIN ENROLLMENT ON SOCIETY.SocID = ENROLLMENT.SID
GROUP BY SocName
HAVING COUNT(ENROLLMENT.RollNo) = TotalSeats * 0.1;
-- 

-- 
SELECT SocName, TotalSeats - COUNT(ENROLLMENT.RollNo) AS VacantSeats FROM SOCIETY
LEFT JOIN ENROLLMENT ON SOCIETY.SocID = ENROLLMENT.SID
GROUP BY SocName;

-- 
UPDATE SOCIETY
SET TotalSeats = TotalSeats * 1.1;
-- 

ALTER TABLE ENROLLMENT
ADD FeesPaid VARCHAR(3) DEFAULT 'No';
-- 

UPDATE ENROLLMENT
SET DateOfEnrollment = CASE
    WHEN SID = 'S1' THEN '2018-01-15'
    WHEN SID = 'S2' THEN CURDATE()
    WHEN SID = 'S3' THEN '2018-01-02'
END
WHERE SID IN ('S1', 'S2', 'S3');
-- 

CREATE VIEW SocietyEnrollment AS
SELECT SocName, COUNT(ENROLLMENT.RollNo) AS TotalEnrolled FROM SOCIETY
JOIN ENROLLMENT ON SOCIETY.SocID = ENROLLMENT.SID
GROUP BY SocName;
-- 

SELECT StudentName FROM STUDENT
WHERE RollNo IN (
    SELECT RollNo FROM ENROLLMENT
    GROUP BY RollNo
    HAVING COUNT(DISTINCT SID) = (SELECT COUNT(*) FROM SOCIETY)
);

-- 

SELECT COUNT(*) FROM (
    SELECT SocName FROM SOCIETY
    JOIN ENROLLMENT ON SOCIETY.SocID = ENROLLMENT.SID
    GROUP BY SocName
    HAVING COUNT(ENROLLMENT.RollNo) > 5
) AS SocietiesWithMoreThanFive;


-- 
ALTER TABLE STUDENT
ADD MobileNumber CHAR(10) DEFAULT '9999999999';


-- 
SELECT COUNT(*) FROM STUDENT
WHERE DOB <= DATE_SUB(CURDATE(), INTERVAL 20 YEAR);

-- 

SELECT StudentName FROM STUDENT
WHERE YEAR(DOB) = 2001 AND RollNo IN (SELECT RollNo FROM ENROLLMENT);
-- 

SELECT COUNT(*) FROM (
    SELECT SocName FROM SOCIETY
    JOIN ENROLLMENT ON SOCIETY.SocID = ENROLLMENT.SID
    WHERE SocName LIKE 'S%t'
    GROUP BY SocName
    HAVING COUNT(ENROLLMENT.RollNo) >= 5
) AS SocietiesWithSAndT;

-- 
SELECT SOCIETY.SocName, MentorName, TotalSeats, COUNT(ENROLLMENT.RollNo) AS TotalEnrolled, (TotalSeats - COUNT(ENROLLMENT.RollNo)) AS UnfilledSeats FROM SOCIETY
LEFT JOIN ENROLLMENT ON SOCIETY.SocID = ENROLLMENT.SID
GROUP BY SOCIETY.SocName;
